version: "3"

services:

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./nginx/conf/:/etc/nginx/conf.d/
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '128M'
        reservations:
          cpus: '0.25'
          memory: '128M'

  rancher1:
    container_name: rancher1
    image: rancher/rancher:latest
    privileged: true
    restart: unless-stopped
    environment:
      CATTLE_BOOTSTRAP_PASSWORD: password
    ports:
#      - "8081:30000"
      - "441:443"
#    deploy: #TODO usage of resource limits not recommended for the rancher container
#      resources:
#        limits:
#          cpus: '1'
#          memory: '2G'
#        reservations:
#          cpus: '0.5'
#          memory: '512M'

  rancher2:
    container_name: rancher2
    image: rancher/rancher:latest
    privileged: true
    restart: unless-stopped
    environment:
      CATTLE_BOOTSTRAP_PASSWORD: password
    ports:
#      - "8082:30000"
      - "442:443"
#    deploy: #TODO usage of resource limits not recommended for the rancher container
#      resources:
#        limits:
#          cpus: '1'
#          memory: '2G'
#        reservations:
#          cpus: '0.5'
#          memory: '512M'

  rancher-cli:
    depends_on:
      - rancher1
      - rancher2
    container_name: rancher-cli
    build:
      dockerfile: ./rancher/rancher-arm.Dockerfile
#      dockerfile: ./rancher/rancher-amd.Dockerfile #TODO use this for windows
    volumes:
      - ./rancher/entrypoint.sh:/init-scripts/rancher-cli/entrypoint.sh
      - ./rancher/eks:/init-scripts/rancher-cli/eks
    entrypoint: >
      sh -c "sh /init-scripts/rancher-cli/entrypoint.sh"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '128M'

  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - '4566:4566'
    environment:
      - EDGE_PORT=4566
      - SERVICES=cloudformation,dynamodb
      - DEBUG=1
    volumes:
      - ./api/scripts/localstack:/docker-entrypoint-initaws.d
      - /var/run/docker.sock:/var/run/docker.sock
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: '1G'
#        reservations:
#          cpus: '0.5'
#          memory: '512M'

  awscli:
    container_name: whiteboard-api-aws-cli
    image: amazon/aws-cli:latest
    volumes:
      - ./api/scripts/localstack:/init-scripts/localstack
      - ./api/scripts/whiteboard-api:/init-scripts/whiteboard-api
      - ./api/cloudformation:/cloudformation
    entrypoint: >
      sh -c "sh /init-scripts/localstack/01-profile-creation.sh && 
      sh /init-scripts/whiteboard-api/01-wait-for-localstack.sh && 
      sh /init-scripts/whiteboard-api/02-resources-creation.sh"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '128M'
